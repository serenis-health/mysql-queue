name: 🏷️ Publish

on:
  workflow_dispatch:
    inputs:
      dryrun:
        type: boolean
        description: Dry-Run

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  deploy-npm-latest:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Clone repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - if: ${{ contains('["gtoselli"]', github.actor) != true }}
        name: Exit early when current actor is not allowed to push new release
        run: |
          echo "Error: Your GitHub username (${{ github.actor }}) is not on the allowed list of admins for this workflow"
          exit 1

      - name: Install dependencies
        uses: ./.github/actions/setup

      - name: Build
        run: pnpm run build

      - name: Lerna Version (build query)
        shell: bash
        run: |
          if ${{inputs.dryrun == true }}
          then
              echo "LERNA_VERSION_TYPE=🧪 Dry-Run" >> $GITHUB_ENV
              echo "LERNA_VERSION_QUERY=pnpm lerna version --conventional-commits --yes --dry-run" >> $GITHUB_ENV
          elif ${{inputs.dryrun != true}}
          then
              echo "LERNA_VERSION_TYPE=🚀 Prod Version" >> $GITHUB_ENV
              echo "LERNA_VERSION_QUERY=pnpm lerna version --conventional-commits --yes" >> $GITHUB_ENV
          fi

      - name: Final version query type - ${{ env.LERNA_VERSION_TYPE }}
        run: echo "${{ env.LERNA_VERSION_QUERY }}"

      - name: Lerna Version 🏷️
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
        run: |
          git config --global user.name "winnertaco"
          git config --global user.email "winnertaco@users.noreply.github.com"
          echo "@serenis:registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc

          pnpm whoami
          pnpm exec ${{ env.LERNA_VERSION_QUERY }}

      - name: OTP
        if: ${{ inputs.dryrun != true }}
        uses: step-security/wait-for-secrets@v1
        id: wait-for-secrets
        with:
          secrets: |
            OTP:
              name: 'OTP to publish package'
              description: 'OTP from authenticator app'

      - name: Lerna Publish 📦
        if: ${{ inputs.dryrun != true }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
        run: |
          pnpm lerna publish from-package --force-publish --yes --otp ${{ steps.wait-for-secrets.outputs.OTP }}
